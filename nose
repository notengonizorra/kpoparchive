<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Rastreador de Grupos K-Pop</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f3f4f6;
        }
        .container {
            max-width: 600px;
        }
        .list-item:nth-child(even) {
            background-color: #f9fafb;
        }
        .modal {
            display: none; /* Ocultar por defecto */
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgb(0,0,0);
            background-color: rgba(0,0,0,0.4);
            justify-content: center;
            align-items: center;
        }
        .modal-content {
            background-color: #fff;
            margin: auto;
            padding: 20px;
            border-radius: 12px;
            width: 90%;
            max-width: 400px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .close-button {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }
        .close-button:hover,
        .close-button:focus {
            color: #000;
            text-decoration: none;
            cursor: pointer;
        }
    </style>
</head>
<body class="bg-gray-100 flex items-center justify-center min-h-screen">

    <div class="container mx-auto p-6 bg-white rounded-xl shadow-lg border border-gray-200">
        <h1 class="text-3xl font-bold text-gray-800 mb-6 text-center">Rastreador de Grupos K-Pop</h1>

        <!-- Formulario para añadir grupo y álbumes -->
        <div class="space-y-4 mb-6">
            <input type="text" id="groupNameInput" placeholder="Nombre del grupo (ej. BTS)"
                   class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500 transition duration-200">
            <div class="flex gap-4 flex-col sm:flex-row">
                <input type="number" id="debutYearInput" placeholder="Año de debut (ej. 2013)" min="1990"
                       class="w-full sm:w-1/2 p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500 transition duration-200">
                <select id="groupTypeInput"
                        class="w-full sm:w-1/2 p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500 transition duration-200">
                    <option value="" disabled selected>Selecciona el tipo</option>
                    <option value="Boy Group">Boy Group</option>
                    <option value="Girl Group">Girl Group</option>
                    <option value="Co-Ed">Co-Ed</option>
                </select>
            </div>
            <input type="url" id="profilePicInput" placeholder="URL de la foto de perfil (opcional)"
                   class="w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500 transition duration-200">

            <!-- Sección de álbumes -->
            <div id="albumSection" class="border border-dashed border-gray-300 rounded-lg p-4 space-y-3">
                <div class="flex items-center justify-between mb-2">
                    <span class="font-semibold text-gray-700">Añadir Álbumes:</span>
                    <button id="addAlbumButton" type="button" class="px-3 py-1 bg-gray-200 text-gray-700 text-sm font-medium rounded-lg hover:bg-gray-300 transition duration-200">
                        + Álbum
                    </button>
                </div>
                <div id="albumsContainer" class="space-y-3">
                    <!-- Los campos de álbumes se añadirán aquí dinámicamente -->
                </div>
            </div>

            <button id="addButton"
                    class="w-full px-6 py-3 bg-pink-500 text-white font-semibold rounded-lg shadow-md hover:bg-pink-600 focus:outline-none focus:ring-2 focus:ring-pink-500 focus:ring-offset-2 transition duration-200 transform hover:scale-105">
                Añadir Grupo
            </button>
        </div>

        <!-- Mensaje de alerta -->
        <div id="messageBox" class="p-4 rounded-lg text-sm transition-all duration-300 hidden"></div>

        <!-- Lista de grupos K-Pop -->
        <div class="bg-gray-50 rounded-lg p-4 shadow-inner border border-gray-200">
            <h2 class="text-xl font-semibold text-gray-700 mb-4">Grupos Añadidos:</h2>
            <ul id="groupList" class="divide-y divide-gray-200">
                <!-- Los grupos se añadirán aquí dinámicamente -->
            </ul>
        </div>
    </div>

    <!-- Modal para las canciones -->
    <div id="songsModal" class="modal">
        <div class="modal-content">
            <span class="close-button">&times;</span>
            <h3 id="modalTitle" class="text-xl font-bold mb-4">Canciones</h3>
            <ul id="modalSongList" class="space-y-2">
                <!-- Las canciones se añadirán aquí -->
            </ul>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const groupNameInput = document.getElementById('groupNameInput');
            const debutYearInput = document.getElementById('debutYearInput');
            const groupTypeInput = document.getElementById('groupTypeInput');
            const profilePicInput = document.getElementById('profilePicInput');
            const addButton = document.getElementById('addButton');
            const addAlbumButton = document.getElementById('addAlbumButton');
            const albumsContainer = document.getElementById('albumsContainer');
            const groupList = document.getElementById('groupList');
            const messageBox = document.getElementById('messageBox');
            
            const songsModal = document.getElementById('songsModal');
            const modalTitle = document.getElementById('modalTitle');
            const modalSongList = document.getElementById('modalSongList');
            const closeButton = document.querySelector('.close-button');

            // Usamos un objeto Map para almacenar los grupos localmente
            const groups = new Map();

            // Cargar datos desde localStorage al iniciar
            function loadGroups() {
                const storedGroups = localStorage.getItem('kpopGroups');
                if (storedGroups) {
                    const parsedGroups = JSON.parse(storedGroups);
                    parsedGroups.forEach(group => {
                        groups.set(group.name.toLowerCase(), group);
                    });
                    renderGroupList();
                }
            }

            // Guardar datos en localStorage
            function saveGroups() {
                localStorage.setItem('kpopGroups', JSON.stringify(Array.from(groups.values())));
            }

            function showMessage(message, type) {
                messageBox.textContent = message;
                messageBox.classList.remove('hidden', 'bg-red-100', 'text-red-700', 'bg-green-100', 'text-green-700');
                if (type === 'error') {
                    messageBox.classList.add('bg-red-100', 'text-red-700');
                } else if (type === 'success') {
                    messageBox.classList.add('bg-green-100', 'text-green-700');
                }
                setTimeout(() => {
                    messageBox.classList.add('hidden');
                }, 3000);
            }

            function addAlbumField() {
                const albumFieldWrapper = document.createElement('div');
                albumFieldWrapper.className = 'album-field-wrapper border p-3 rounded-lg bg-gray-50 space-y-2';
                albumFieldWrapper.innerHTML = `
                    <div class="flex flex-col sm:flex-row gap-2">
                        <input type="text" placeholder="Nombre del álbum"
                            class="album-name-input flex-1 p-2 text-sm border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500">
                        <input type="url" placeholder="URL de la foto del álbum"
                            class="album-url-input flex-1 p-2 text-sm border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500">
                        <input type="date"
                            class="album-date-input flex-1 p-2 text-sm border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-pink-500">
                        <button type="button" class="remove-album-button px-2 py-1 text-sm text-red-500 hover:text-red-700 font-bold">
                            ×
                        </button>
                    </div>
                    <div class="flex items-center justify-between">
                        <span class="text-sm text-gray-600">Canciones:</span>
                        <button type="button" class="add-song-button px-3 py-1 bg-gray-200 text-gray-700 text-xs rounded-lg hover:bg-gray-300 transition duration-200">+ Canción</button>
                    </div>
                    <div class="song-list space-y-1"></div>
                `;
                albumsContainer.appendChild(albumFieldWrapper);

                const removeButton = albumFieldWrapper.querySelector('.remove-album-button');
                removeButton.addEventListener('click', () => albumFieldWrapper.remove());

                const addSongButton = albumFieldWrapper.querySelector('.add-song-button');
                addSongButton.addEventListener('click', () => {
                    const songList = albumFieldWrapper.querySelector('.song-list');
                    const songField = document.createElement('div');
                    songField.className = 'flex gap-2 items-center';
                    songField.innerHTML = `
                        <input type="text" placeholder="Nombre de la canción"
                               class="song-name-input flex-1 p-2 text-xs border border-gray-200 rounded-lg focus:outline-none focus:ring-1 focus:ring-gray-400">
                        <button type="button" class="remove-song-button text-xs text-red-400 hover:text-red-600 font-bold leading-none">
                            ×
                        </button>
                    `;
                    songList.appendChild(songField);
                    songField.querySelector('.remove-song-button').addEventListener('click', () => songField.remove());
                });
            }

            function renderGroupList() {
                groupList.innerHTML = '';
                if (groups.size === 0) {
                    const emptyItem = document.createElement('li');
                    emptyItem.className = 'py-3 text-center text-gray-500';
                    emptyItem.textContent = 'No se ha añadido ningún grupo todavía.';
                    groupList.appendChild(emptyItem);
                } else {
                    groups.forEach(group => {
                        const listItem = document.createElement('li');
                        listItem.className = 'py-4 px-4 flex flex-col list-item cursor-pointer';

                        const header = document.createElement('div');
                        header.className = 'flex items-center justify-between mb-2';
                        header.innerHTML = `
                            <div class="flex items-center space-x-4">
                                ${group.profilePic ? `<img src="${group.profilePic}" alt="${group.name}" class="w-12 h-12 rounded-full object-cover shadow-sm border border-gray-200">` : ''}
                                <div>
                                    <div class="font-bold text-gray-800 text-lg">${group.name}</div>
                                    <div class="text-sm text-gray-500">
                                        Año: ${group.year} | Tipo: ${group.type}
                                    </div>
                                </div>
                            </div>
                            <button class="text-gray-400 hover:text-red-500 font-bold text-xl leading-none transition duration-200 delete-group-button" data-group-name="${group.name.toLowerCase()}">
                                ×
                            </button>
                        `;

                        const albumsContainerEl = document.createElement('div');
                        albumsContainerEl.className = 'albums-list mt-3 pl-16 hidden';
                        
                        if (group.albums && group.albums.length > 0) {
                            albumsContainerEl.innerHTML = `
                                <h4 class="font-semibold text-gray-700 mb-2">Álbumes:</h4>
                                <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4">
                                    ${group.albums.map((album, index) => `
                                        <div class="flex flex-col items-center text-center album-card cursor-pointer" data-album-index="${index}">
                                            <img src="${album.photoUrl}" alt="${album.name}" class="w-20 h-20 rounded-lg object-cover shadow-sm border border-gray-200">
                                            <div class="text-xs text-gray-600 mt-1 truncate w-full">${album.name}</div>
                                            <div class="text-xs text-gray-400">${album.releaseDate}</div>
                                        </div>
                                    `).join('')}
                                </div>
                            `;
                        } else {
                            albumsContainerEl.innerHTML = `
                                <div class="text-sm text-gray-500 pl-16">No se han añadido álbumes.</div>
                            `;
                        }
                        
                        header.addEventListener('click', (e) => {
                            if (!e.target.closest('.delete-group-button')) {
                                albumsContainerEl.classList.toggle('hidden');
                            }
                        });

                        albumsContainerEl.querySelectorAll('.album-card').forEach(albumCard => {
                            albumCard.addEventListener('click', () => {
                                const albumIndex = albumCard.dataset.album-index;
                                const album = group.albums[albumIndex];
                                showSongsModal(album);
                            });
                        });

                        listItem.appendChild(header);
                        listItem.appendChild(albumsContainerEl);
                        groupList.appendChild(listItem);

                        // Eliminar grupo
                        listItem.querySelector('.delete-group-button').addEventListener('click', () => {
                            const groupName = listItem.querySelector('.font-bold').textContent;
                            groups.delete(groupName.toLowerCase());
                            saveGroups();
                            renderGroupList();
                            showMessage(`Se ha eliminado '${groupName}'.`, 'error');
                        });
                    });
                }
            }

            function showSongsModal(album) {
                modalTitle.textContent = `Canciones de '${album.name}'`;
                modalSongList.innerHTML = '';
                if (album.songs && album.songs.length > 0) {
                    album.songs.forEach(song => {
                        const songItem = document.createElement('li');
                        songItem.className = 'bg-gray-100 p-2 rounded-lg text-sm text-gray-800';
                        songItem.textContent = song;
                        modalSongList.appendChild(songItem);
                    });
                } else {
                    const noSongs = document.createElement('li');
                    noSongs.className = 'text-center text-gray-500';
                    noSongs.textContent = 'No se han añadido canciones para este álbum.';
                    modalSongList.appendChild(noSongs);
                }
                songsModal.style.display = 'flex';
            }

            closeButton.addEventListener('click', () => {
                songsModal.style.display = 'none';
            });

            window.addEventListener('click', (event) => {
                if (event.target === songsModal) {
                    songsModal.style.display = 'none';
                }
            });

            addButton.addEventListener('click', () => {
                const groupName = groupNameInput.value.trim();
                const debutYear = debutYearInput.value.trim();
                const groupType = groupTypeInput.value;
                const profilePicUrl = profilePicInput.value.trim();

                if (groupName && debutYear && groupType) {
                    const groupNameKey = groupName.toLowerCase();
                    if (groups.has(groupNameKey)) {
                        showMessage(`'${groupName}' ya está en la lista.`, 'error');
                        return;
                    }

                    // Recolectar datos de los álbumes
                    const albums = [];
                    const albumWrappers = albumsContainer.querySelectorAll('.album-field-wrapper');
                    albumWrappers.forEach(wrapper => {
                        const albumName = wrapper.querySelector('.album-name-input').value.trim();
                        const albumUrl = wrapper.querySelector('.album-url-input').value.trim();
                        const releaseDate = wrapper.querySelector('.album-date-input').value.trim();
                        
                        const songs = [];
                        const songInputs = wrapper.querySelectorAll('.song-name-input');
                        songInputs.forEach(input => {
                            if (input.value.trim()) {
                                songs.push(input.value.trim());
                            }
                        });

                        if (albumName) {
                            albums.push({ 
                                name: albumName, 
                                photoUrl: albumUrl || 'https://placehold.co/80x80/cccccc/333333?text=Album',
                                releaseDate: releaseDate || 'Fecha desconocida',
                                songs: songs
                            });
                        }
                    });

                    const newGroup = {
                        name: groupName,
                        year: debutYear,
                        type: groupType,
                        profilePic: profilePicUrl || 'https://placehold.co/80x80/cccccc/333333?text=Group',
                        albums: albums
                    };

                    groups.set(groupNameKey, newGroup);
                    saveGroups();
                    renderGroupList();
                    showMessage(`'${groupName}' añadido correctamente.`, 'success');
                    
                    // Limpiar campos del formulario
                    groupNameInput.value = '';
                    debutYearInput.value = '';
                    groupTypeInput.value = '';
                    profilePicInput.value = '';
                    albumsContainer.innerHTML = '';
                } else {
                    showMessage('Por favor, rellena los campos obligatorios: Nombre del grupo, Año de debut y Tipo de grupo.', 'error');
                }
            });

            addAlbumButton.addEventListener('click', addAlbumField);

            // Manejar la tecla Enter en el campo de nombre del grupo
            groupNameInput.addEventListener('keydown', (event) => {
                if (event.key === 'Enter') {
                    addButton.click();
                }
            });
            
            // Cargar y renderizar la lista inicial
            loadGroups();
        });
    </script>
</body>
</html>
